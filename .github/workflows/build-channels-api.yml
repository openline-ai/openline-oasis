name: Build Oasis Channels API

on:
  push:
    branches: [ "otter"]
    paths:
      - 'packages/server/channels-api/**'
      - '.github/workflows/build-channels-api.yml'
  pull_request:
    branches: [ "otter" ]
  release:
    types: [created, edited]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/channels-api

permissions:
  contents: read
  pull-requests: read

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Oasis api
        working-directory: ./packages/server/oasis-api
        run: make install

      - name: Generate Oasis api
        working-directory: ./packages/server/oasis-api
        run: make generate
        
      - name: Build
        working-directory: ./packages/server/channels-api
        run: make all

      - name: Test
        working-directory: ./packages/server/channels-api
        run: go test -v

  publish:
    name: publish image
    needs:
      - build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Channel API
        working-directory: ./packages/server/channels-api
        run: make install generate

      - name: Generate Oasis api
        working-directory: ./packages/server/oasis-api
        run: make generate

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REPOSITORY_READ_WRITE_USERNAME }}
          password: ${{ secrets.REPOSITORY_READ_WRITE_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./packages/server/
          file: ./packages/server/channels-api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
